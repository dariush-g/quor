def get_char_at(str: char*, index: int) :: char {
    let len: int = strlen(str);

    if (index >= len) {
        exit(1);
    }

    let ret: char* = str + index;
    let val: char = *ret;
    free(ret);
    return val;
}

def concat(str1: char*, str2: char*) :: char* {
    let len1: int = strlen(str1);
    let len2: int = strlen(str2);

   
    let new: char* = malloc(len1 + len2 + 1) as char*;

    let ret: char* = new;

    let count: int = 0;
    while (count < len1) {
        let c: char = get_char_at(str1, count);
        *new = c;
        new = new + 1;
        count = count + 1;
    }

    let count2: int = 0;
    while (count2 < len2) {
        let c: char = get_char_at(str2, count);
        *new = c;
        new = new + 1;
        count2 = count2 + 1;
    }

    *new = '\0';
    
    return "";
}

