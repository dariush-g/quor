@import::<string.qu>
@import::("lexer/lex.qu")
@import::("parser.qu")
@import::("codegen.qu")


def main(argc: int, argv: char**) :: int {
    
    if (argc != 2) {
        print_str("Expected filename!");
        print_char(10 as char);
        print_str("Try: quor <filename>");
        print_char(10 as char);
        exit(1);
    }
    
    argv = argv + 1;

    let filename: char* = *argv;

    let name_len: int = strlen(filename);

    if (name_len < 3
        || char_at(filename, name_len - 1) != 'u'
        || char_at(filename, name_len - 2) != 'q'
        || char_at(filename, name_len - 3) != '.') {
        print_str("Expected <filename>.qu | Got: ");
        print_str(filename);
        print_char(10 as char);
        exit(1);
    }

    let file_contents: char* = read_file(filename);

    print_str("; ModuleID = 'quor'");
    print_char(10 as char);
    print_str("source_filename = quor");
    print_char(10 as char);
    print_str("target triple = x86_64-unknown-linux-gnu");
    print_char(10 as char);
    print_char(10 as char);
    print_str("define i32 @main() {");
    print_char(10 as char);
    print_str("  ret i32 0");
    print_char(10 as char);
    print_str("}");
    print_char(10 as char);

    return 0;
}
